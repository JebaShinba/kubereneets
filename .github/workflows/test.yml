name: Minikube CI/CD

on:
  push:
    branches:
      - main

jobs:
  minikube:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Purge all related packages
      - name: Remove Conflicting Packages
        run: |
          sudo apt-get remove -y --purge containerd containerd.io docker docker.io docker-ce docker-ce-cli runc || true
          sudo apt-get autoremove -y
          sudo apt-get autoclean

      # Clean up and fix broken dependencies
      - name: Fix Broken Dependencies
        run: |
          sudo apt-get update
          sudo apt-get --fix-broken install
          sudo dpkg --configure -a

      # Add Docker's official repository
      - name: Configure Docker Repository
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update

      # Install containerd.io and related dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get install -y containerd.io conntrack
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          sudo apt-get install -y docker.io kubectl

      # Start Minikube
      - name: Start Minikube
        env:
          MINIKUBE_IN_STYLE: false # Disable interactive mode for CI
        run: |
          minikube start --driver=docker --wait
          kubectl cluster-info

      # Apply Kubernetes Deployment
      - name: Apply Kubernetes Deployment
        run: |
          kubectl apply -f deployment.yaml
          kubectl rollout status deployment/nginx-deployment

      # Verify Pods Status
      - name: Verify Pods
        run: |
          kubectl get pods
          kubectl describe pods

      # Cleanup Resources
      - name: Cleanup Minikube
        if: always() # Ensures cleanup even if previous steps fail
        run: |
          kubectl delete -f deployment.yaml || true
          minikube stop
          minikube delete

